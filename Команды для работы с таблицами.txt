Чтобы манипулировать с таблицами, нужно приконектиться к базе данных
________________________________________________________________________________________________________________________________________________________________
								СОЗДАНИЕ НОВОЙ ТАЛИЦЫ СО СТОЛБИКАМИ

create table <название табилицы>(				#1	создать таблицу.
id serial primary key,						#2	уникальный айди, который будет сам нумероваться по порядку при добавлянии новых 										#	значений.
<название столбика> <тип вводимых данных>       		#3	создание еще одного столбика с выбранным типом вводимых данных (
								#	integer, varchar(максимум символов), text).
<название столбика> integer references <название таблицы>(<название столбика>);	#4	создание столбика в котором нужно будет добавить айди, 
										#	который будет ссылаться на айди другого столбика, чтобы потом объеденить 										#	таблицы.
________________________________________________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________________________________________________
								ИЗМЕНЕНИЕ ЗНАЧЕНИЙ В ТАБЛИЦЕ

#1 Вставление в выбранную таблицу значений(уникальный айди, если он есть самому нумеровать не нужно, он сам вставиться по порядку).
insert into <название таблицы>(<название столбика>, <название столбика>) values ('<значение вставляемое в столбик>', '<значение вставляемое в столбик>'); 

#2 Удалить ссылание столбца на другую таблицу.
alter table <название таблицы> drop constraint <название таблицы>_<название столбца>_fkey;

#3 Удалить значение из таблицы по её уникальному айди.
delete from <название таблицы> where id=<её уникальный айди>;

#4 Изменить существующее значение в таблице.
update <название таблицы> set <название столбика>="<новое значение>" where <id>=<уникальный айди>;
________________________________________________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________________________________________________
								ПРОСМОТР ТАБЛИЦЫ

#1 Посмотреть выбранную таблицу, типы её столбцов(например varchar), индексы(например уникальный айди), столбцы которые ссылаются на другую таблицу (не получая  
# записанные данные в столбики).
\d <название таблицы>;							
	
#2 Выбор всех столбцов из выбранной таблицы.
select * from <название таблицы>;	

#3 Выбор отдельных столбцов из выбранной таблицы.
select <название столбца>, <название столбца> from <название таблицы>;	

#4 Просмотр таблицы в соединённом варианте с таблицей на которую ссылается.
select <название таблицы №1>.*, <название таблицы №2>.<название столбца> from <название таблицы №1> <left,right,inner> join <название таблицы №2> on <название таблицы №2>.<название столбца 'ключа'> = <название таблицы №1>.<название столбца 'двери'>;

#4.1(ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ), если хочешь сгруппировать что-то, например по именам , в конце добавь: group by <название таблицы>.<название столбика>; 
#так же можно суммировать цены(integer) взяв в начале в sum(), например: select sum(product.price) 
#если значение суммы NULL(пустое), можно превратить в 0, например: coalesce(sum(product.price), 0) as price(можно любое другое название)
#также можно отсортировать по возрастанию или убыванию, добавив в конце: order by price desc;
#что бы убрать клиентов которые ничего не приобрели можно поставить в конце: having sum(product.price)>0;(конфликтует если поставить "order by price desc" #первее)

#5 
________________________________________________________________________________________________________________________________________________________________
